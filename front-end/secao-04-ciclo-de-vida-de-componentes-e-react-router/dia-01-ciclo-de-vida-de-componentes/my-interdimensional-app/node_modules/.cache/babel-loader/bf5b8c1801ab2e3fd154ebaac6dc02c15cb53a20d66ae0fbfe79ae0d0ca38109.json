{"ast":null,"code":"var _jsxFileName = \"/home/felipe/trybe-exercicios/front-end/secao-04-ciclo-de-vida-de-componentes-e-react-router/dia-01-ciclo-de-vida-de-componentes/my-interdimensional-app/src/App.js\";\n// App.js\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // fa a requisição a API\n    this.fetchCharacters = () => {\n      fetch('https://rickandmortyapi.com/api/character').then(response => response.json()).then(data => {\n        this.setState({\n          characters: data.results\n        });\n      });\n    };\n    this.state = {\n      characters: []\n    };\n  }\n  // roda a requisição ao terminar de renderizar a aplicação\n  componentDidMount() {\n    this.fetchCharacters();\n  }\n  render() {\n    const {\n      characters\n    } = this.state;\n    console.log(characters);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ricky and Morty Characters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: characters.map(_ref => {\n          let {\n            name,\n            image\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","props","fetchCharacters","fetch","then","response","json","data","setState","characters","results","state","componentDidMount","render","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref","name","image","src","alt"],"sources":["/home/felipe/trybe-exercicios/front-end/secao-04-ciclo-de-vida-de-componentes-e-react-router/dia-01-ciclo-de-vida-de-componentes/my-interdimensional-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n    };\n  }\n  // fa a requisição a API\n  fetchCharacters = () => {\n    fetch('https://rickandmortyapi.com/api/character')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ characters: data.results })\n      })\n  }\n  // roda a requisição ao terminar de renderizar a aplicação\n  componentDidMount() {\n    this.fetchCharacters();\n  }\n\n  render() {\n    const { characters } = this.state\n    console.log(characters);\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Ricky and Morty Characters:\n        </h1>\n        <div className=\"body\">\n          {characters.map(({ name, image }) => {\n            return (\n              <div className=\"container\" key={name}>\n                <h3>{name}</h3>\n                <img src={image} alt={name} />\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAKd;IAAA,KACAC,eAAe,GAAG,MAAM;MACtBC,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZ,IAAI,CAACC,QAAQ,CAAC;UAAEC,UAAU,EAAEF,IAAI,CAACG;QAAQ,CAAC,CAAC;MAC7C,CAAC,CAAC;IACN,CAAC;IAXC,IAAI,CAACC,KAAK,GAAG;MACXF,UAAU,EAAE;IACd,CAAC;EACH;EASA;EACAG,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACV,eAAe,CAAC,CAAC;EACxB;EAEAW,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEJ;IAAW,CAAC,GAAG,IAAI,CAACE,KAAK;IACjCG,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;IAEvB,oBACEX,OAAA;MAAKkB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBnB,OAAA;QAAAmB,QAAA,EAAI;MAEJ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLvB,OAAA;QAAKkB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAClBR,UAAU,CAACa,GAAG,CAACC,IAAA,IAAqB;UAAA,IAApB;YAAEC,IAAI;YAAEC;UAAM,CAAC,GAAAF,IAAA;UAC9B,oBACEzB,OAAA;YAAKkB,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBnB,OAAA;cAAAmB,QAAA,EAAKO;YAAI;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACfvB,OAAA;cAAK4B,GAAG,EAAED,KAAM;cAACE,GAAG,EAAEH;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,GAFAG,IAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAG/B,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAetB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}